/*
 * This file is generated by jOOQ.
 */
package com.revolut.demo.jooq.model.revolut_schema.tables.records;


import com.revolut.demo.jooq.model.revolut_schema.tables.Account;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record7<Long, BigDecimal, Short, String, Timestamp, Integer, Integer> {

    private static final long serialVersionUID = 1339845008;

    /**
     * Setter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_NO</code>.
     */
    public void setAccNo(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_NO</code>.
     */
    public Long getAccNo() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_BALANCE</code>.
     */
    public void setAccBalance(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_BALANCE</code>.
     */
    public BigDecimal getAccBalance() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_ACTIVE</code>.
     */
    public void setAccActive(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_ACTIVE</code>.
     */
    public Short getAccActive() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_TYPE</code>.
     */
    public void setAccType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_TYPE</code>.
     */
    public String getAccType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_CREATED_DATE</code>.
     */
    public void setAccCreatedDate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_CREATED_DATE</code>.
     */
    public Timestamp getAccCreatedDate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_VERSION</code>.
     */
    public void setAccVersion(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>REVOLUT_SCHEMA.ACCOUNT.ACC_VERSION</code>.
     */
    public Integer getAccVersion() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>REVOLUT_SCHEMA.ACCOUNT.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>REVOLUT_SCHEMA.ACCOUNT.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, BigDecimal, Short, String, Timestamp, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, BigDecimal, Short, String, Timestamp, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.ACC_NO;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Account.ACCOUNT.ACC_BALANCE;
    }

    @Override
    public Field<Short> field3() {
        return Account.ACCOUNT.ACC_ACTIVE;
    }

    @Override
    public Field<String> field4() {
        return Account.ACCOUNT.ACC_TYPE;
    }

    @Override
    public Field<Timestamp> field5() {
        return Account.ACCOUNT.ACC_CREATED_DATE;
    }

    @Override
    public Field<Integer> field6() {
        return Account.ACCOUNT.ACC_VERSION;
    }

    @Override
    public Field<Integer> field7() {
        return Account.ACCOUNT.USER_ID;
    }

    @Override
    public Long component1() {
        return getAccNo();
    }

    @Override
    public BigDecimal component2() {
        return getAccBalance();
    }

    @Override
    public Short component3() {
        return getAccActive();
    }

    @Override
    public String component4() {
        return getAccType();
    }

    @Override
    public Timestamp component5() {
        return getAccCreatedDate();
    }

    @Override
    public Integer component6() {
        return getAccVersion();
    }

    @Override
    public Integer component7() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getAccNo();
    }

    @Override
    public BigDecimal value2() {
        return getAccBalance();
    }

    @Override
    public Short value3() {
        return getAccActive();
    }

    @Override
    public String value4() {
        return getAccType();
    }

    @Override
    public Timestamp value5() {
        return getAccCreatedDate();
    }

    @Override
    public Integer value6() {
        return getAccVersion();
    }

    @Override
    public Integer value7() {
        return getUserId();
    }

    @Override
    public AccountRecord value1(Long value) {
        setAccNo(value);
        return this;
    }

    @Override
    public AccountRecord value2(BigDecimal value) {
        setAccBalance(value);
        return this;
    }

    @Override
    public AccountRecord value3(Short value) {
        setAccActive(value);
        return this;
    }

    @Override
    public AccountRecord value4(String value) {
        setAccType(value);
        return this;
    }

    @Override
    public AccountRecord value5(Timestamp value) {
        setAccCreatedDate(value);
        return this;
    }

    @Override
    public AccountRecord value6(Integer value) {
        setAccVersion(value);
        return this;
    }

    @Override
    public AccountRecord value7(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public AccountRecord values(Long value1, BigDecimal value2, Short value3, String value4, Timestamp value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long accNo, BigDecimal accBalance, Short accActive, String accType, Timestamp accCreatedDate, Integer accVersion, Integer userId) {
        super(Account.ACCOUNT);

        set(0, accNo);
        set(1, accBalance);
        set(2, accActive);
        set(3, accType);
        set(4, accCreatedDate);
        set(5, accVersion);
        set(6, userId);
    }
}
