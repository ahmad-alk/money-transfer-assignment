/*
 * This file is generated by jOOQ.
 */
package com.revolut.demo.jooq.model.revolut_schema;


import com.revolut.demo.jooq.model.DefaultCatalog;
import com.revolut.demo.jooq.model.revolut_schema.tables.Account;
import com.revolut.demo.jooq.model.revolut_schema.tables.AccountTransactions;
import com.revolut.demo.jooq.model.revolut_schema.tables.User;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RevolutSchema extends SchemaImpl {

    private static final long serialVersionUID = 1954772990;

    /**
     * The reference instance of <code>REVOLUT_SCHEMA</code>
     */
    public static final RevolutSchema REVOLUT_SCHEMA = new RevolutSchema();

    /**
     * The table <code>REVOLUT_SCHEMA.ACCOUNT</code>.
     */
    public final Account ACCOUNT = com.revolut.demo.jooq.model.revolut_schema.tables.Account.ACCOUNT;

    /**
     * The table <code>REVOLUT_SCHEMA.ACCOUNT_TRANSACTIONS</code>.
     */
    public final AccountTransactions ACCOUNT_TRANSACTIONS = com.revolut.demo.jooq.model.revolut_schema.tables.AccountTransactions.ACCOUNT_TRANSACTIONS;

    /**
     * The table <code>REVOLUT_SCHEMA.USER</code>.
     */
    public final User USER = com.revolut.demo.jooq.model.revolut_schema.tables.User.USER;

    /**
     * No further instances allowed
     */
    private RevolutSchema() {
        super("REVOLUT_SCHEMA", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
                Account.ACCOUNT,
                AccountTransactions.ACCOUNT_TRANSACTIONS,
                User.USER);
    }
}
