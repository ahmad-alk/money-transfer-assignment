/*
 * This file is generated by jOOQ.
 */
package com.revolut.demo.jooq.model.revolut_db_4;


import com.revolut.demo.jooq.model.revolut_db_4.tables.Account;
import com.revolut.demo.jooq.model.revolut_db_4.tables.AccountTransactions;
import com.revolut.demo.jooq.model.revolut_db_4.tables.User;
import com.revolut.demo.jooq.model.revolut_db_4.tables.records.AccountRecord;
import com.revolut.demo.jooq.model.revolut_db_4.tables.records.AccountTransactionsRecord;
import com.revolut.demo.jooq.model.revolut_db_4.tables.records.UserRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import javax.annotation.processing.Generated;


/**
 * A class modelling foreign key relationships and constraints of tables of
 * the <code>REVOLUT_DB_4</code> schema.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, Long> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> CONSTRAINT_E = UniqueKeys0.CONSTRAINT_E;
    public static final UniqueKey<AccountTransactionsRecord> CONSTRAINT_D = UniqueKeys0.CONSTRAINT_D;
    public static final UniqueKey<UserRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, UserRecord> ACC_USER_ID_FK = ForeignKeys0.ACC_USER_ID_FK;
    public static final ForeignKey<AccountTransactionsRecord, AccountRecord> AT_ACC_FROM = ForeignKeys0.AT_ACC_FROM;
    public static final ForeignKey<AccountTransactionsRecord, AccountRecord> AT_ACC_TO = ForeignKeys0.AT_ACC_TO;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountRecord, Long> IDENTITY_ACCOUNT = Internal.createIdentity(Account.ACCOUNT, Account.ACCOUNT.ACC_NO);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> CONSTRAINT_E = Internal.createUniqueKey(Account.ACCOUNT, "CONSTRAINT_E", Account.ACCOUNT.ACC_NO);
        public static final UniqueKey<AccountTransactionsRecord> CONSTRAINT_D = Internal.createUniqueKey(AccountTransactions.ACCOUNT_TRANSACTIONS, "CONSTRAINT_D", AccountTransactions.ACCOUNT_TRANSACTIONS.AT_ID);
        public static final UniqueKey<UserRecord> CONSTRAINT_2 = Internal.createUniqueKey(User.USER, "CONSTRAINT_2", User.USER.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, UserRecord> ACC_USER_ID_FK = Internal.createForeignKey(Keys.CONSTRAINT_2, Account.ACCOUNT, "ACC_USER_ID_FK", Account.ACCOUNT.USER_ID);
        public static final ForeignKey<AccountTransactionsRecord, AccountRecord> AT_ACC_FROM = Internal.createForeignKey(Keys.CONSTRAINT_E, AccountTransactions.ACCOUNT_TRANSACTIONS, "AT_ACC_FROM", AccountTransactions.ACCOUNT_TRANSACTIONS.AT_FROM);
        public static final ForeignKey<AccountTransactionsRecord, AccountRecord> AT_ACC_TO = Internal.createForeignKey(Keys.CONSTRAINT_E, AccountTransactions.ACCOUNT_TRANSACTIONS, "AT_ACC_TO", AccountTransactions.ACCOUNT_TRANSACTIONS.AT_TO);
    }
}
