drop table if exists REVOLUT_SCHEMA.USER;
drop table if exists REVOLUT_SCHEMA.ACCOUNT;
drop table if exists REVOLUT_SCHEMA.ACCOUNT_TRANSACTIONS;

CREATE TABLE REVOLUT_SCHEMA.USER
(
    ID           INT          NOT NULL AUTO_INCREMENT,
    FULL_NAME    VARCHAR(100) NOT NULL,
    EMAIL        VARCHAR(100) NOT NULL,
    CREATED_DATE TIMESTAMP    NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID)
);

CREATE TABLE REVOLUT_SCHEMA.ACCOUNT
(
    ACC_NO           long           NOT NULL AUTO_INCREMENT,
    ACC_BALANCE      DECIMAL(20, 3) NOT NULL,
    ACC_ACTIVE       SMALLINT(1)    NOT NULL DEFAULT 1,
    ACC_TYPE         VARCHAR(45)    NOT NULL,
    ACC_CREATED_DATE TIMESTAMP      NULL     DEFAULT CURRENT_TIMESTAMP,
    ACC_VERSION      INT            NULL,
    USER_ID          INT            NOT NULL,
    PRIMARY KEY (ACC_NO),
    CONSTRAINT ACC_USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES REVOLUT_SCHEMA.USER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);



CREATE TABLE REVOLUT_SCHEMA.ACCOUNT_TRANSACTIONS
(
    AT_ID      VARCHAR(45)    NOT NULL,
    AT_FROM    long           NOT NULL,
    AT_TO      long           NOT NULL,
    AT_AMOUNT  DECIMAL(20, 3) NULL,
    AT_STATUS  VARCHAR(45)    NOT NULL,
    AT_DATE    TIMESTAMP      NULL DEFAULT CURRENT_TIMESTAMP,
    AT_REMARKS VARCHAR(45)    NULL,
    PRIMARY KEY (AT_ID),
    CONSTRAINT AT_ACC_FROM
        FOREIGN KEY (AT_FROM)
            REFERENCES REVOLUT_SCHEMA.ACCOUNT (ACC_NO)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT AT_ACC_TO
        FOREIGN KEY (AT_TO)
            REFERENCES REVOLUT_SCHEMA.ACCOUNT (ACC_NO)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
